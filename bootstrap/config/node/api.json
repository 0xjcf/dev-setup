{
	"name": "node-api",
	"description": "Node.js API project configuration",
	"version": "1.0.0",
	"common": {
		"devDependencies": [
			"@biomejs/biome",
			"@types/node",
			"supertest",
			"@types/supertest"
		],
		"scripts": {
			"test": "NODE_ENV=test tsx --test test/*.test.ts",
			"test:watch": "NODE_ENV=test tsx --test --watch test/*.test.ts",
			"lint": "biome check .",
			"format": "biome format --write .",
			"docker:build": "docker build -t {{name}} .",
			"docker:dev": "docker-compose up api",
			"docker:test": "docker-compose up test",
			"docker:test:watch": "docker-compose up test-watch"
		}
	},
	"api": {
		"dependencies": [
			"express",
			"@types/express",
			"dotenv",
			"tsx",
			"typescript"
		],
		"devDependencies": [],
		"scripts": {
			"dev": "tsx watch src/index.ts",
			"build": "tsc",
			"start": "node dist/index.js"
		},
		"structure": {
			"directories": [
				"src",
				"src/routes",
				"src/controllers",
				"src/services",
				"src/types",
				"test"
			],
			"files": {
				"biome.json": "",
				"package.json": "",
				"src/index.ts": "",
				"test/index.test.ts": "",
				"Dockerfile": "",
				"docker-compose.yml": "services:\\n  api:\\n    build:\\n      context: .\\n      target: development\\n    ports:\\n      - \\\"{{port}}:{{port}}\\\"\\n    volumes:\\n      - .:/app\\n      - /app/node_modules\\n    environment:\\n      - NODE_ENV=development\\n      - PORT={{port}}\\n    command: pnpm dev\\n\\n  test:\\n    build:\\n      context: .\\n      target: test\\n    # No volumes needed - use code copied into the image during build\\n    environment:\\n      - NODE_ENV=test\\n      - PORT={{port}}\\n    # Use YAML folded style (>) for multi-line command clarity\\n    command: >\\n      sh -c \\\"echo '--- Running tests with Node version: ---' && \\\\\\\n             node -v && \\\\\\\n             echo '---' && \\\\\\\n             NODE_ENV=test pnpm exec tsx --test test/*.test.ts\\\"\\n\\n  test-watch:\\n    build:\\n      context: .\\n      target: test\\n    volumes:\\n      - ./src:/app/src\\n      - ./test:/app/test\\n      - /app/node_modules\\n    environment:\\n      - NODE_ENV=test\\n      - PORT={{port}}\\n    command: pnpm run test:watch"
			}
		}
	}
}
